/*
Deployment script for RockPaperScissorsDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "RockPaperScissorsDB"
:setvar DefaultFilePrefix "RockPaperScissorsDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_User_ToTable]...';


GO
ALTER TABLE [dbo].[User] DROP CONSTRAINT [FK_User_ToTable];


GO
PRINT N'Starting rebuilding table [dbo].[Move]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Move] (
    [Id]             BIGINT IDENTITY (1, 1) NOT NULL,
    [playerWins]     BIT    NULL,
    [computerMove]   INT    NULL,
    [humanMove]      INT    NULL,
    [gameType]       INT    NULL,
    [difficultyType] INT    NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Move])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Move] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Move] ([Id], [playerWins], [computerMove], [humanMove], [gameType], [difficultyType])
        SELECT   [Id],
                 [playerWins],
                 [computerMove],
                 [humanMove],
                 [gameType],
                 [difficultyType]
        FROM     [dbo].[Move]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Move] OFF;
    END

DROP TABLE [dbo].[Move];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Move]', N'Move';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[User]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_User] (
    [Id]          BIGINT   IDENTITY (1, 1) NOT NULL,
    [createdUser] DATETIME NOT NULL,
    [playsOfUser] BIGINT   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[User])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_User] ON;
        INSERT INTO [dbo].[tmp_ms_xx_User] ([Id], [createdUser], [playsOfUser])
        SELECT   [Id],
                 [createdUser],
                 [playsOfUser]
        FROM     [dbo].[User]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_User] OFF;
    END

DROP TABLE [dbo].[User];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_User]', N'User';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_User_Id]...';


GO
ALTER TABLE [dbo].[Move] WITH NOCHECK
    ADD CONSTRAINT [FK_User_Id] FOREIGN KEY ([Id]) REFERENCES [dbo].[User] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Move] WITH CHECK CHECK CONSTRAINT [FK_User_Id];


GO
PRINT N'Update complete.';


GO
